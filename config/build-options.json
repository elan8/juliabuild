{
  "build_options": {
    "USE_GPL_LIBS": {
      "value": "0",
      "description": "Exclude GPL licensed libraries (FFTW, GMP, MPFR)",
      "effect": "Creates a more permissive build without GPL licensing restrictions"
    },
    "USE_BLAS64": {
      "value": "1",
      "description": "Use 64-bit BLAS for better performance with large matrices",
      "effect": "Better performance for large linear algebra operations"
    },
    "USE_INTEL_MKL": {
      "value": "0",
      "description": "Use OpenBLAS instead of Intel MKL",
      "effect": "Better compatibility and open source alternative to MKL"
    },
    "JULIA_CPU_TARGET": {
      "value": "native",
      "description": "Optimize for current CPU architecture",
      "effect": "Better performance on the target machine"
    },
    "MAKEFLAGS": {
      "value": "-j$(nproc)",
      "description": "Use all available CPU cores for building",
      "effect": "Faster build times"
    },
    "JULIA_DEBUG": {
      "value": "0",
      "description": "Disable debug symbols for release builds",
      "effect": "Smaller binary size and better performance"
    },
    "VERBOSE": {
      "value": "1",
      "description": "Enable verbose build output",
      "effect": "Better debugging information during build"
    },
    "CFLAGS": {
      "value": "-O3",
      "description": "Optimization flags for C compiler",
      "effect": "Better performance for C code"
    },
    "CXXFLAGS": {
      "value": "-O3",
      "description": "Optimization flags for C++ compiler",
      "effect": "Better performance for C++ code"
    },
    "LDFLAGS": {
      "value": "-O3",
      "description": "Optimization flags for linker",
      "effect": "Better performance for linked code"
    }
  },
  "supported_versions": [
    "v1.11.6",
    "v1.10.0",
    "v1.9.4"
  ],
  "supported_platforms": [
    "linux",
    "macos",
    "windows"
  ],
  "build_types": [
    "release",
    "debug"
  ],
  "excluded_combinations": [
    {
      "platform": "windows",
      "julia_version": "v1.8.5",
      "reason": "Older Julia versions may not support Windows well"
    }
  ],
  "gpl_libraries_excluded": [
    {
      "name": "FFTW",
      "description": "Fast Fourier Transform library",
      "replacement": "MKL or OpenBLAS FFT functions",
      "impact": "Some FFT operations may be slower"
    },
    {
      "name": "GMP",
      "description": "GNU Multiple Precision Arithmetic Library",
      "replacement": "MPFR or alternative implementations",
      "impact": "Large integer arithmetic may be slower"
    },
    {
      "name": "MPFR",
      "description": "Multiple Precision Floating-Point Reliable Library",
      "replacement": "Alternative high-precision implementations",
      "impact": "High-precision arithmetic may have reduced functionality"
    }
  ],
  "verification_commands": {
    "linux": [
      "ldd ./julia | grep -i fftw || echo 'FFTW not found (good)'",
      "ldd ./julia | grep -i gmp || echo 'GMP not found (good)'",
      "ldd ./julia | grep -i mpfr || echo 'MPFR not found (good)'"
    ],
    "macos": [
      "otool -L ./julia | grep -i fftw || echo 'FFTW not found (good)'",
      "otool -L ./julia | grep -i gmp || echo 'GMP not found (good)'",
      "otool -L ./julia | grep -i mpfr || echo 'MPFR not found (good)'"
    ],
    "windows": [
      "dumpbin /dependents julia.exe | findstr /i fftw || echo 'FFTW not found (good)'",
      "dumpbin /dependents julia.exe | findstr /i gmp || echo 'GMP not found (good)'",
      "dumpbin /dependents julia.exe | findstr /i mpfr || echo 'MPFR not found (good)'"
    ]
  }
} 